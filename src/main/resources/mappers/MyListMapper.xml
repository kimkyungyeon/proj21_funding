<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="proj21_funding.mapper.MyListMapper">

		<!-- 고객 번호로 프로젝트 + 프로젝트옵션 + 간단한유저정보 리스트  -->
		<select id="showAllMyList"
		 resultMap="proj21_funding.mapper.PrjOptionMapper.AssociateProject">
				select 
							p.prjNo, p.UserNo,  p.pCategoryNo, pc.pCategoryName ,PrjName, PrjContent, PrjGoal,
							p.StartDate, p.EndDate, p.PayDate, p.EndYN, u.UserId , u.UserName,u.nickname,
							op.OptNo, op.optName,  op.OptPrice, op.OptContent,
							if(sum(optPrice)>0,sum(optPrice),0) as totalPrice,
							ifnull(round(sum(optprice)/prjgoal*100,2),0) as rate
				 from fundinginfo f 
	   				   join prjoption op on op.optno= f.OptNo 
						 right join project p on p.prjno = f.PrjNo 
						join userinfo u on p.UserNo = u.UserNo 
						join prjcategory pc on p.pCategoryNo = pc.pCategoryNo
				group by p.prjno
				having p.userno =  #{userNo.userNo}				 	
		</select>
		
		<!--페이징 리스트  -->
		<select id="showAllListByMap"
		 resultMap="proj21_funding.mapper.PrjOptionMapper.AssociateProject">	
				select 
						p.prjNo, p.UserNo,  p.pCategoryNo, pc.pCategoryName ,PrjName, PrjContent, PrjGoal,
						p.StartDate, p.EndDate, p.PayDate, p.EndYN, u.UserId , u.UserName,u.nickname,
						op.OptNo, op.optName,  op.OptPrice, op.OptContent,
						if(sum(op.optPrice)>0,sum(op.optPrice),0) as totalPrice						
				from fundinginfo f 
	   				  join prjoption op on op.optno= f.OptNo 
					 right join project p on p.prjno = f.PrjNo 
					join userinfo u on p.UserNo = u.UserNo 
					join prjcategory pc on p.pCategoryNo = pc.pCategoryNo
				group by prjno
				having p.userno = #{uNo}			
				order by p.prjNo desc LIMIT #{pageSearch}, #{cntPerPage }
		</select>
		
		<select id="selectCountPrjByUserNo"  resultType="int" >
				select count(*)  from project p where userno=#{uNo}
		</select>
		
		
		<!-- 프로젝트 번호로 리스트 받아오기 detail  -->
		<select id="showDetailListByprjNo" 
			 resultMap="proj21_funding.mapper.PrjOptionMapper.AssociateProject">
				select 
							p.prjNo, p.UserNo,  p.pCategoryNo, pc.pCategoryName, p.PrjName, p.PrjContent, p.PrjGoal,
							p.StartDate, p.EndDate, p.PayDate, p.EndYN, u.UserId , u.UserName,u.nickname,
							op.OptNo, op.optName,  op.OptPrice, op.OptContent,
							if(sum(optPrice)>0,sum(optPrice),0) as totalPrice
					from fundinginfo f 
		   				  join prjoption op on op.optno= f.OptNo 
						 right join project p on p.prjno = f.PrjNo 
						join userinfo u on p.UserNo = u.UserNo 
						join prjcategory pc on p.pCategoryNo = pc.pCategoryNo
				group by prjno
				having p.prjno = #{prjNo}		
		</select>
		
			<!-- 프로젝트and 옵션 조인 업데이트 -->
		<update id="joinUpdateProjectAndPrjOptionByPrjNoInMyLIst" parameterType="map">
				update project as p inner join prjoption as op
						on p.PrjNo = op.PrjNo 
				set 
						p.PrjName = #{pName}, p.PrjContent = #{pContent},
						op.OptName = #{oName}, op.OptContent = #{oContent}
				where p.PrjNo = #{pNo}		
		</update>		
		
		<!-- 프로젝트 추가 1번쨰 옵션 수정 -->
		<update id="updateListOptionByMap" parameterType="map">
			update prjoption 
				set OptName = #{addOptName1}, OptContent = #{addOptContent1}
			where OptNo = #{addOptNo1}		
		</update>
		
		<!-- 프로젝트 추가 옵션들 수정 -->
		<update id="updateListAllAddOptionsByMap" parameterType="map">
			update prjoption as op1 inner join prjoption as op2
				on op1.PrjNo = op2.PrjNo 
			set 
					op1.OptName =#{addOptName1}, op1.OptContent =#{addOptContent1} ,
					op2.OptName = #{addOptName2}, op2.OptContent = #{addOptContent2} 
			where op1.OptNo =#{addOptNo1}  and op2.OptNo  =#{addOptNo2} 
		</update>
		
		<!-- 프로젝트 추가 3번째 옵션 수정 -->
		<update id="updateListSubOptByMap" parameterType="map">
			update prjoption 
				set OptName = #{addOptName3}, OptContent = #{addOptContent3}
			where OptNo = #{addOptNo3}		
		</update>
		<!--캐스캐이드 맵으로 지우기  -->
		<delete id="deleteCascadeProjectByMap" parameterType="map">
				delete from project where PrjNo =#{pNo}
		</delete>

</mapper>